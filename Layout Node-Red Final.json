[
    {
        "id": "98f4c7cb30e21ff6",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a9f6601233d33f0",
        "type": "tab",
        "label": "LAYOUT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "26c5328fc439c360",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1d6b9886f5f9245e",
        "type": "ui-group",
        "name": "Entradas De Peças",
        "page": "2554dd4996c7159e",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "4a96ec03c2078922",
        "type": "ui-group",
        "name": "Botões",
        "page": "2554dd4996c7159e",
        "width": "14",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "9966b967ecf5d5d5",
        "type": "ui-group",
        "name": "Temporizador",
        "page": "2554dd4996c7159e",
        "width": "6",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "5f96e35cf3135f4f",
        "type": "ui-group",
        "name": "Peças Em Processo",
        "page": "2554dd4996c7159e",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "5e38eb3f4a3327c5",
        "type": "ui-group",
        "name": "Peças Finalizadas",
        "page": "2554dd4996c7159e",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2554dd4996c7159e",
        "type": "ui-page",
        "name": "Controle e Monitoramento",
        "ui": "eeef16dfea1dc325",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "2855b12ac88ed4fb",
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "eeef16dfea1dc325",
        "type": "ui-base",
        "name": "Controle de Servomotor",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "2855b12ac88ed4fb",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "8e3ca6ddbccc0d6e",
        "type": "mqtt in",
        "z": "98f4c7cb30e21ff6",
        "name": "",
        "topic": "sensor/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26c5328fc439c360",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 240,
        "wires": [
            [
                "0b9474363061fbf5",
                "ab3e0aa34574d365",
                "32de0abe41e4712a"
            ]
        ]
    },
    {
        "id": "0b9474363061fbf5",
        "type": "function",
        "z": "98f4c7cb30e21ff6",
        "name": "Contador",
        "func": "// Obtém o contador atual ou define como 0 se não existir\nvar count = context.get('count') || 0;\n\n// Verifica se o payload recebido é para zerar\nif (msg.payload == \"reset\") {\n    count = 0; // Zera o contador\n} else if (msg.payload == \"2\") {\n    count += 1; // Incrementa o contador quando recebe \"1\"\n}\n\n// Armazena o valor atualizado do contador no contexto\ncontext.set('count', count);\n\n// Define o payload da mensagem como o valor atual do contador\nmsg.payload = count;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 100,
        "wires": [
            [
                "0cc2c8f2d3abfc4b",
                "912d0dba707abcc4"
            ]
        ]
    },
    {
        "id": "0cc2c8f2d3abfc4b",
        "type": "ui-gauge",
        "z": "98f4c7cb30e21ff6",
        "name": "entrada",
        "group": "1d6b9886f5f9245e",
        "order": 1,
        "width": "3",
        "height": "2",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "",
        "units": "units",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "25",
                "color": "#ffc800"
            },
            {
                "from": "75",
                "color": "#ea5353"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "7ac825bdcd8f8e55",
        "type": "ui-button",
        "z": "98f4c7cb30e21ff6",
        "group": "4a96ec03c2078922",
        "name": "Zerar contador",
        "label": "Zerar contador",
        "order": 4,
        "width": "3",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "reset",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 240,
        "y": 180,
        "wires": [
            [
                "0b9474363061fbf5",
                "ab3e0aa34574d365",
                "32de0abe41e4712a"
            ]
        ]
    },
    {
        "id": "912d0dba707abcc4",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 200,
        "wires": []
    },
    {
        "id": "154979e1d9a2c9cb",
        "type": "ui-button",
        "z": "98f4c7cb30e21ff6",
        "group": "4a96ec03c2078922",
        "name": "Parar",
        "label": "parar",
        "order": 1,
        "width": "3",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "parar",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "#EE6055",
        "textColor": "",
        "iconColor": "",
        "x": 250,
        "y": 800,
        "wires": [
            [
                "2d3c6175199517d5"
            ]
        ]
    },
    {
        "id": "2d3c6175199517d5",
        "type": "mqtt out",
        "z": "98f4c7cb30e21ff6",
        "name": "",
        "topic": "esteira/direcao",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26c5328fc439c360",
        "x": 620,
        "y": 720,
        "wires": []
    },
    {
        "id": "c9319fa6bbc45499",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 880,
        "wires": []
    },
    {
        "id": "654164344b512d8a",
        "type": "mqtt in",
        "z": "98f4c7cb30e21ff6",
        "name": "",
        "topic": "esteira/direcao",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26c5328fc439c360",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 880,
        "wires": [
            [
                "c9319fa6bbc45499",
                "64d383877f27b008"
            ]
        ]
    },
    {
        "id": "64d383877f27b008",
        "type": "function",
        "z": "98f4c7cb30e21ff6",
        "name": "function 1",
        "func": "var valor = context.get(\"valor\") || null;  // Recupera o valor armazenado\nvar timeoutId = context.get(\"timeoutId\") || null;  // Recupera o timeoutId armazenado\n\n// Função para reiniciar o processo\nfunction restartProcess() {\n    if (timeoutId) {\n        clearTimeout(timeoutId);  // Interrompe o timeout atual\n        context.set(\"timeoutId\", null);  // Limpa o timeoutId armazenado\n    }\n    context.set(\"obj\", \"rodando\");  // Define o estado como rodando\n    valor = 15;  // Define o valor inicial para \"horario\"\n    tick();  // Inicia a contagem\n}\n\n// Função para o processo de contagem\nfunction tick() {\n    valor--;\n    if (valor >= 0) {\n        if (context.get(\"obj\") === \"rodando\") {\n            node.send([{ payload: valor }, null, null]);  // Atualiza o payload com o valor\n            timeoutId = setTimeout(tick, 1000);  // Atualiza o timeoutId\n            context.set(\"timeoutId\", timeoutId);  // Armazena o timeoutId\n        }\n    } else {\n        if (context.get(\"obj\") === \"rodando\") {  // Verifica se o estado é \"rodando\"\n            node.send([null, null, { payload: \"Reiniciar\" }]);  // Envia sinal de parada\n            context.set(\"obj\", \"parado\");  // Define o estado como parado\n            context.set(\"timeoutId\", null);  // Limpa o timeoutId após a conclusão\n        }\n    }\n}\n\n// Lógica principal\nif (msg.payload === \"horario\") {\n    restartProcess();  // Reinicia o processo quando o payload é \"horario\"\n} else if (msg.payload === \"Reiniciar\") {\n    if (timeoutId) {\n        clearTimeout(timeoutId);  // Interrompe o timeout atual se o processo estiver rodando\n        context.set(\"timeoutId\", null);  // Limpa o timeoutId armazenado\n    }\n    if (context.get(\"obj\") !== \"parado\") {  // Verifica se o estado não é \"parado\"\n        node.send([null, null, { payload: \"Reiniciar\" }]);  // Envia sinal de parada\n        context.set(\"obj\", \"parado\");  // Define o estado como parado\n    }\n} else if (typeof msg.payload === 'number') {\n    valor = msg.payload;  // Define o valor com o número recebido\n    if (context.get(\"obj\") === \"parado\" || context.get(\"obj\") === null) {\n        context.set(\"obj\", \"rodando\");  // Define o estado como rodando\n        tick();  // Inicia a contagem\n    }\n}\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1100,
        "wires": [
            [
                "2e5f97dc5bcf9430",
                "0606c4146562c25e"
            ],
            [],
            [
                "3c017abe98186306",
                "064aa9cd0334724a"
            ]
        ]
    },
    {
        "id": "2e5f97dc5bcf9430",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1080,
        "wires": []
    },
    {
        "id": "f7be5f19c77df916",
        "type": "ui-template",
        "z": "98f4c7cb30e21ff6",
        "group": "9966b967ecf5d5d5",
        "page": "",
        "ui": "",
        "name": "Timer:",
        "order": 1,
        "width": "6",
        "height": "2",
        "head": "",
        "format": "<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        .time-display {\n            font-size: 2em;\n            width: 100%;\n            text-align: center;\n            font-weight: bold;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"time-display\">{{msg.payload}}</div>\n    <script>\n        (function(scope) {\n            scope.$watch('msg', function(msg) {\n                if (msg && msg.payload !== undefined) {\n                    // Atualiza o display com o valor do payload\n                    document.querySelector('.time-display').innerText = msg.payload;\n                }\n            });\n        })(scope);\n    </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "0606c4146562c25e",
        "type": "function",
        "z": "98f4c7cb30e21ff6",
        "name": "function 2",
        "func": "// Formata o payload como uma string\nmsg.payload = msg.payload.toString();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 980,
        "wires": [
            [
                "f7be5f19c77df916"
            ]
        ]
    },
    {
        "id": "3c017abe98186306",
        "type": "mqtt out",
        "z": "98f4c7cb30e21ff6",
        "name": "",
        "topic": "esteira/direcao",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26c5328fc439c360",
        "x": 720,
        "y": 1140,
        "wires": []
    },
    {
        "id": "064aa9cd0334724a",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7310e9f66ac510d1",
        "type": "ui-button",
        "z": "98f4c7cb30e21ff6",
        "group": "4a96ec03c2078922",
        "name": "Ligar Comando",
        "label": "Ligar Comando",
        "order": 3,
        "width": "3",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "ligar",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "#008000",
        "textColor": "",
        "iconColor": "",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "2d3c6175199517d5",
                "147a17c569378d01"
            ]
        ]
    },
    {
        "id": "c8be67cf3e3fdf93",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 640,
        "wires": []
    },
    {
        "id": "ab3e0aa34574d365",
        "type": "function",
        "z": "98f4c7cb30e21ff6",
        "name": "Contador",
        "func": "// Obtém o contador atual ou define como 0 se não existir\nvar count = context.get('count') || 0;\n\n// Verifica se o payload recebido é para zerar\nif (msg.payload == \"reset\") {\n    count = 0; // Zera o contador\n} else if (msg.payload == \"1\") {\n    count += 1; // Incrementa o contador quando recebe \"1\"\n}\n\n// Armazena o valor atualizado do contador no contexto\ncontext.set('count', count);\n\n// Define o payload da mensagem como o valor atual do contador\nmsg.payload = count;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "6f9b3303d0125280",
                "3f7381f9784677d1"
            ]
        ]
    },
    {
        "id": "6f9b3303d0125280",
        "type": "ui-gauge",
        "z": "98f4c7cb30e21ff6",
        "name": "meio",
        "group": "5f96e35cf3135f4f",
        "order": 1,
        "width": "3",
        "height": "2",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "",
        "units": "units",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "25",
                "color": "#ffc800"
            },
            {
                "from": "75",
                "color": "#ea5353"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 620.2000122070312,
        "y": 329.1999816894531,
        "wires": []
    },
    {
        "id": "3f7381f9784677d1",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470.20001220703125,
        "y": 369.1999816894531,
        "wires": []
    },
    {
        "id": "32de0abe41e4712a",
        "type": "function",
        "z": "98f4c7cb30e21ff6",
        "name": "Contador",
        "func": "// Obtém o contador atual ou define como 0 se não existir\nvar count = context.get('count') || 0;\n\n// Verifica se o payload recebido é para zerar\nif (msg.payload == \"reset\") {\n    count = 0; // Zera o contador\n} else if (msg.payload == \"4\") {\n    count += 1; // Incrementa o contador quando recebe \"1\"\n}\n\n// Armazena o valor atualizado do contador no contexto\ncontext.set('count', count);\n\n// Define o payload da mensagem como o valor atual do contador\nmsg.payload = count;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 440,
        "wires": [
            [
                "f3c9634d844a0670",
                "9f8face967595473"
            ]
        ]
    },
    {
        "id": "f3c9634d844a0670",
        "type": "ui-gauge",
        "z": "98f4c7cb30e21ff6",
        "name": "saida",
        "group": "5e38eb3f4a3327c5",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "",
        "units": "units",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "25",
                "color": "#ffc800"
            },
            {
                "from": "75",
                "color": "#ea5353"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "9f8face967595473",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 540,
        "wires": []
    },
    {
        "id": "147a17c569378d01",
        "type": "debug",
        "z": "98f4c7cb30e21ff6",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 780,
        "wires": []
    },
    {
        "id": "ec47479cfc67bcd4",
        "type": "ui-template",
        "z": "2a9f6601233d33f0",
        "group": "",
        "page": "",
        "ui": "eeef16dfea1dc325",
        "name": "LAYOUT",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "/* cuida do fundo */\n.v-main {\n    background-image: url('/fundo.jpg');\n    background-size: cover;\n}\n\n/* cuida do grupo */\n.nrdb-ui-group .v-card  {    \n    background-color: #00000040 !important; \n    border-radius: 10px !important; \n    border: 1px solid #908f8f;\n    color: #c3c3c3;\n    \n}\n\n/* cuida do menu */\n.v-navigation-drawer {\n    background-color: #00000040;   \n}\n\n/* cuida da cor do titulo do grupo */\n.v-card-title {\n    color: #000000;\n}\n\n/* cuida da cor do titulo do menu */\n.v-list-item-title {\n    color: #000000;\n}\n\n/* cuida da transperencia da barra de titulo */\n.v-app-bar.v-toolbar {\n    background: transparent;\n}\n\n/* cuida da cor do titulo */\n.v-toolbar-title__placeholder {\n    color: #000000;\n}\n\n/* cuida da cor ddo icone de expansao do menu */\n.v-theme--nrdb .v-icon--size-default {\n    color: #c3c3c3;\n}\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 120,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "eda4e78a9562dfc4",
        "type": "ui-text",
        "z": "2a9f6601233d33f0",
        "group": "9966b967ecf5d5d5",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 110,
        "y": 180,
        "wires": []
    },
    {
        "id": "8452308fdfd6cd3a",
        "type": "ui-template",
        "z": "2a9f6601233d33f0",
        "group": "4a96ec03c2078922",
        "page": "",
        "ui": "",
        "name": "Esteira 4.0",
        "order": 5,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<a\n    href=\"https://ibb.co/RpBXMYR\"><img src=\"https://i.ibb.co/vxQNrV0/Whats-App-Image-2024-09-03-at-16-38-10-1.jpg\" alt=\"Whats-App-Image-2024-09-03-at-16-38-10-1\" border=\"0\"></a>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "fa934fe4a481335f",
        "type": "ui-template",
        "z": "2a9f6601233d33f0",
        "group": "4a96ec03c2078922",
        "page": "",
        "ui": "",
        "name": "Esteira 4.0",
        "order": 7,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<a\n    href=\"https://ibb.co/RpBXMYR\"><img src=\"https://i.ibb.co/vxQNrV0/Whats-App-Image-2024-09-03-at-16-38-10-1.jpg\" alt=\"Whats-App-Image-2024-09-03-at-16-38-10-1\" border=\"0\"></a>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 519.1999816894531,
        "y": 82.19999694824219,
        "wires": [
            []
        ]
    },
    {
        "id": "a345f223bb2fb1bb",
        "type": "ui-template",
        "z": "2a9f6601233d33f0",
        "group": "4a96ec03c2078922",
        "page": "",
        "ui": "",
        "name": "Esteira 4.0",
        "order": 6,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<a\n    href=\"https://ibb.co/RpBXMYR\"><img src=\"https://i.ibb.co/vxQNrV0/Whats-App-Image-2024-09-03-at-16-38-10-1.jpg\" alt=\"Whats-App-Image-2024-09-03-at-16-38-10-1\" border=\"0\"></a>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 80,
        "wires": [
            []
        ]
    }
]